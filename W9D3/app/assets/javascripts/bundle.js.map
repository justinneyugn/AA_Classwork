{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,SAAS;AACT;AACA;;AAEA;;;;;;UC3CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,CAAC,E","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtil = {\n    followUser: id => {\n        return $.ajax({\n            method: 'POST',\n            url: '/users/' + id + '/follow',\n            dataType: 'JSON'\n        });\n    },\n\n    unfollowUser: id => {\n        return $.ajax({\n            method: 'DELETE',\n            url: '/users/' + id + '/follow',\n            dataType: 'JSON'\n        });\n    }\n};\n\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle {\n    constructor(el) {\n        this.$el = $(el);\n        this.userId = this.$el.data('user-id');\n        this.followState = this.$el.data('initial-follow-state');\n        this.render();\n        this.handleClick();\n    }\n\n    render() {\n        if (this.followState === 'unfollowed') {\n            this.$el.text('Follow!');\n        } else {\n            this.$el.text('Unfollow!');\n        }\n        this.$el.prop(\"disabled\", false);\n    }\n\n    handleClick() {\n        $(this.$el).on('click', e => {\n            this.$el.prop(\"disabled\", true);\n            e.preventDefault();\n            if (this.followState === 'unfollowed') {\n                APIUtil.followUser(this.userId)\n                    .then(res => {\n                        this.followState = 'followed';\n                        this.$el.prop('data-initial-follow-state', 'followed');\n                        this.render();\n                    });\n            } else {\n                APIUtil.unfollowUser(this.userId)\n                    .then(res => {\n                        this.followState = 'unfollowed';\n                        this.$el.prop('data-initial-follow-state', 'unfollowed');\n                        this.render();\n                    });\n            }\n        });\n    }\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\n\n$(document).ready(function () {\n    let $buttons = $('.follow-toggle');\n    $buttons.each((id, button) => {\n        new FollowToggle(button);\n    });\n\n    let $navs = $('.users-search');\n    $navs.each((id, nav) => {\n        new UsersSearch(nav);\n    });\n});"],"names":[],"sourceRoot":""}